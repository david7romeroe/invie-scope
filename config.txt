************* GIT CONFIGURATION ****************
inicializar git: git init
configurar git username: git config --global user.name "david romero"
configurar git email: git config --global user.email "david.romeroe@outlook.com"
ver la configuracion global del git: git config --global --list

************ Git Basic ***********
ver versión: git --version
agregar al staging: git add .
ver status: git status
commit: git commit -m "Datos del campo"
commit junto al anterior: git commit -m "agregado" --ammend
remover del staging directory: git rm --cached -r .
remover del staging y eliminarlos: git rm -f archivo
remover del working: git checkout -- archivo
probar que archivos existen dentro del sistema: git add -n archivo

************ Gig Tag ************
etiqueta ligera: git tag 0.5
etiqueta anotada: git tag 0.5 -m "version estable del proyecto"
listar etiquetas: git tag -l
etiquetar version: git tag 0.9 sha-1
eliminar tag: git tag -d 1.0
renombrar tags: git tag -f -a 0.1 -m "renombrado" sha-1

************ Gig Log ************
lista de logs: git log
oneline logs: git log --oneline
con grafica: git log --graph --oneline

*********** Git Diff ************
comparar con otras versiones: git diff version1 version2

*********** Git Reset ***********
reset soft quita los cambios del commit: git reset --soft sha-1
reset mixed quita los cambios del commit y los pone en la carpeta working: git reset --mixed sha-1
reset los cambios del archivo: git reset HEAD <file>

*********** Git Branch ***********
crear ramas: git branch
listar ramas git branch -l
eliminar rama: git branch -d o -D rama (eliminación forzada)
renombrar ramas: git branch -m responsive "nueva"

*********** Git Checkout ***********
cambiar de ramas: git checkout rama
crear y cambiar ramas: git checkout: git checkout -b rama

********** Git Merge ***********
combinar cambios en ramas: git merge rama

********** Git Rebase ***********
reestructurar ramas: git rebase

********** Git Stash **********
guardar cambios en stash: git stash
listar stash: git stash list
aplicar cambios: git stash apply
eliminar cambios: git stash drop

********** Git Cherrypick **********
escoger commit de otro brach: git cherry-pick sha-1

********** Crear llave SSH **********
ssh-keygen -t rsa -b 4096 -C "dmail.earth@gmail.com"
copiar llave: pbcopy < ~/.ssh/id_rsa.pub

********** Repositorio remoto **********
Agregar repositorio remoto: git remote add origin https://github.com/david7romeroe/invie-scope.git
Verificar repositorio: git remote -v
Remover repositorio: git remote remove origin

********** Fetch **********
Obtener datos de repositorio remoto y crear nueva rama: git fetch origin master
Segundo paso para hacer el merge: git merge origin/master --allow-unrelated-histories
Obtener todo con merge: git pull origin master

********** Push **********
Enviar al repo remoto: git push origin master
Enviar tags: git push origin master --tags
Enviar otra rama: git push otra rama
